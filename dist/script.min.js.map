{"version":3,"sources":["script.js"],"names":["products","id","name","price","map","product","_objectSpread","image","concat","encodeURIComponent","cart","JSON","parse","localStorage","getItem","updateCartCount","count","reduce","total","item","quantity","querySelectorAll","forEach","el","textContent","addToCart","productId","productName","productPrice","existingItem","find","push","window","pathname","includes","removeFromCart","filter","setItem","stringify","renderCart","updateQuantity","newQuantity","parseInt","cartItemsEl","document","getElementById","checkoutBtn","querySelector","innerHTML","subtotalEl","totalEl","html","p","toFixed","length","sum","disabled","subtotal","btn","addEventListener","e","itemTotal","dataset","target","input","value","renderProducts","container","productsToRender","join","parseFloat","originalText","style","backgroundColor","searchProducts","searchInput","sortSelect","filterAndSortProducts","filteredProducts","toLowerCase","searchTerm","sort","a","b","location"],"mappings":"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","file":"script.min.js","sourcesContent":["// Product data with consistent image naming\nconst products = [\n    { id: 1, name: \"Wireless Headphones\", price: 59.99 },\n    { id: 2, name: \"Smart Watch\", price: 129.99 },\n    { id: 3, name: \"Bluetooth Speaker\", price: 39.99 },\n    { id: 4, name: \"Laptop Backpack\", price: 49.99 },\n    { id: 5, name: \"Fitness Tracker\", price: 79.99 },\n    { id: 6, name: \"Wireless Earbuds\", price: 89.99 }\n].map(product => ({\n    ...product,\n    image: `https://via.placeholder.com/300?text=${encodeURIComponent(product.name)}`\n}));\n\n// Cart functionality\nlet cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n// Update cart count\nfunction updateCartCount() {\n    const count = cart.reduce((total, item) => total + item.quantity, 0);\n    document.querySelectorAll('.cart-count').forEach(el => {\n        el.textContent = count;\n    });\n}\n\n// Add to cart\nfunction addToCart(productId, productName, productPrice) {\n    const existingItem = cart.find(item => item.id === productId);\n    \n    if (existingItem) {\n        existingItem.quantity += 1;\n    } else {\n        cart.push({\n            id: productId,\n            name: productName,\n            price: productPrice,\n            quantity: 1\n        });\n    }\n    \n    localStorage.setItem('cart', JSON.stringify(cart));\n    updateCartCount();\n    if (window.location.pathname.includes('cart.html')) {\n        renderCart();\n    }\n}\n\n// Remove from cart\nfunction removeFromCart(productId) {\n    cart = cart.filter(item => item.id !== productId);\n    localStorage.setItem('cart', JSON.stringify(cart));\n    updateCartCount();\n    renderCart();\n}\n\n// Update quantity\nfunction updateQuantity(productId, newQuantity) {\n    const item = cart.find(item => item.id === productId);\n    if (item) {\n        item.quantity = parseInt(newQuantity) || 1;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        renderCart();\n    }\n}\n\n// Render cart\nfunction renderCart() {\n    const cartItemsEl = document.getElementById('cart-items');\n    const subtotalEl = document.getElementById('subtotal');\n    const totalEl = document.getElementById('total');\n    const checkoutBtn = document.querySelector('.checkout-btn');\n    \n    if (cart.length === 0) {\n        cartItemsEl.innerHTML = `\n            <div class=\"empty-cart\">\n                <p>Your cart is empty</p>\n                <a href=\"products.html\" class=\"btn\">Continue Shopping</a>\n            </div>\n        `;\n        subtotalEl.textContent = '$0.00';\n        totalEl.textContent = '$0.00';\n        checkoutBtn.disabled = true;\n        return;\n    }\n    \n    const html = cart.map(item => {\n        const product = products.find(p => p.id === item.id);\n        const itemTotal = item.price * item.quantity;\n        \n        return `\n            <div class=\"cart-item\">\n                <img src=\"${product.image}\" alt=\"${item.name}\">\n                <div class=\"cart-item-details\">\n                    <h4>${item.name}</h4>\n                    <p class=\"cart-item-price\">$${item.price.toFixed(2)}</p>\n                    <div class=\"cart-item-quantity\">\n                        <button class=\"quantity-btn minus\" data-id=\"${item.id}\">-</button>\n                        <input type=\"number\" value=\"${item.quantity}\" min=\"1\" data-id=\"${item.id}\">\n                        <button class=\"quantity-btn plus\" data-id=\"${item.id}\">+</button>\n                    </div>\n                </div>\n                <button class=\"remove-item\" data-id=\"${item.id}\">\n                    <i class=\"fas fa-trash\"></i>\n                </button>\n            </div>\n        `;\n    }).join('');\n    \n    const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n    \n    cartItemsEl.innerHTML = html;\n    subtotalEl.textContent = `$${subtotal.toFixed(2)}`;\n    totalEl.textContent = `$${subtotal.toFixed(2)}`;\n    checkoutBtn.disabled = false;\n    \n    // Add event listeners\n    document.querySelectorAll('.remove-item').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            removeFromCart(parseInt(e.target.closest('button').dataset.id));\n        });\n    });\n    \n    document.querySelectorAll('.quantity-btn.minus').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const id = parseInt(e.target.dataset.id);\n            const item = cart.find(item => item.id === id);\n            if (item.quantity > 1) {\n                updateQuantity(id, item.quantity - 1);\n            }\n        });\n    });\n    \n    document.querySelectorAll('.quantity-btn.plus').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const id = parseInt(e.target.dataset.id);\n            const item = cart.find(item => item.id === id);\n            updateQuantity(id, item.quantity + 1);\n        });\n    });\n    \n    document.querySelectorAll('.cart-item-quantity input').forEach(input => {\n        input.addEventListener('change', (e) => {\n            const id = parseInt(e.target.dataset.id);\n            updateQuantity(id, e.target.value);\n        });\n    });\n}\n\n// Render products\nfunction renderProducts(productsToRender) {\n    const container = document.getElementById('products-container');\n    if (!container) return;\n    \n    const html = productsToRender.map(product => `\n        <div class=\"product-card\">\n            <img src=\"${product.image}\" alt=\"${product.name}\">\n            <h3>${product.name}</h3>\n            <p class=\"price\">$${product.price.toFixed(2)}</p>\n            <button class=\"btn add-to-cart\" data-id=\"${product.id}\" data-name=\"${product.name}\" data-price=\"${product.price}\">Add to Cart</button>\n        </div>\n    `).join('');\n    \n    container.innerHTML = html;\n    \n    // Add event listeners to add to cart buttons\n    document.querySelectorAll('.add-to-cart').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const id = parseInt(e.target.dataset.id);\n            const name = e.target.dataset.name;\n            const price = parseFloat(e.target.dataset.price);\n            addToCart(id, name, price);\n            \n            // Show added to cart feedback\n            const originalText = e.target.textContent;\n            e.target.textContent = 'Added!';\n            e.target.style.backgroundColor = '#2E7D32';\n            setTimeout(() => {\n                e.target.textContent = originalText;\n                e.target.style.backgroundColor = '#4CAF50';\n            }, 1000);\n        });\n    });\n}\n\n// Search products\nfunction searchProducts() {\n    const searchInput = document.getElementById('search-input');\n    const sortSelect = document.getElementById('sort-select');\n    \n    if (!searchInput || !sortSelect) return;\n    \n    searchInput.addEventListener('input', filterAndSortProducts);\n    sortSelect.addEventListener('change', filterAndSortProducts);\n    \n    function filterAndSortProducts() {\n        const searchTerm = searchInput.value.toLowerCase();\n        let filteredProducts = products.filter(product => \n            product.name.toLowerCase().includes(searchTerm)\n        );\n        \n        // Sort products\n        switch(sortSelect.value) {\n            case 'price-low':\n                filteredProducts.sort((a, b) => a.price - b.price);\n                break;\n            case 'price-high':\n                filteredProducts.sort((a, b) => b.price - a.price);\n                break;\n            default:\n                // Default sorting (by ID)\n                filteredProducts.sort((a, b) => a.id - b.id);\n        }\n        \n        renderProducts(filteredProducts);\n    }\n}\n\n// Initialize the page\ndocument.addEventListener('DOMContentLoaded', function() {\n    updateCartCount();\n    \n    if (window.location.pathname.includes('cart.html')) {\n        renderCart();\n    } else if (window.location.pathname.includes('products.html')) {\n        renderProducts(products);\n        searchProducts();\n    } else {\n        // Home page - add event listeners to add to cart buttons\n        document.querySelectorAll('.add-to-cart').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const id = parseInt(e.target.dataset.id);\n                const name = e.target.dataset.name;\n                const price = parseFloat(e.target.dataset.price);\n                addToCart(id, name, price);\n                \n                // Show added to cart feedback\n                const originalText = e.target.textContent;\n                e.target.textContent = 'Added!';\n                e.target.style.backgroundColor = '#2E7D32';\n                setTimeout(() => {\n                    e.target.textContent = originalText;\n                    e.target.style.backgroundColor = '#4CAF50';\n                }, 1000);\n            });\n        });\n    }\n});"]}